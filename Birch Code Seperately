import pandas as pd
import numpy as np
import seaborn as sns
import math
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
from numpy import unique
from numpy import where
from sklearn.datasets import make_classification
from sklearn.cluster import Birch
from sklearn.impute import SimpleImputer

# Define Data
data5 = pd.read_csv('owid-covid-data.csv.zip')
data = data5[['reproduction_rate', 'female_smokers', 'median_age']]
data2 = data.copy()
dataY = data5[['reproduction_rate', 'male_smokers', 'median_age']]
data3 = dataY.copy()
# data2 = make_classification(n_samples=50, n_features=2, n_informative=2, n_redundant=0, n_clusters_per_class=1, random_state=4)
fig, ax = plt.subplots(figsize=(20, 20))

# BIRCH starts now
model = Birch(threshold=1, n_clusters=3)
model1 = Birch(threshold=1, n_clusters=3)
data2 = data2.dropna(axis=0)
data3 = data3.dropna(axis=0)
model.fit(data2)
model1.fit(data3)

pred = model.predict(data2)
pred2 = model1.predict(data3)
clusters = unique(pred)
cluster2 = unique(pred2)

for cluster in clusters:
  rowX = dataX
  plt.subplot(2, 3, 1)
  plt.scatter(rowX[:, 0], rowX[:, 1], color='purple')  # 

for cluster in clusters:
    rowY = where(pred2 == clusters)
    dataY = data3.iloc[:, :-1].values
    rowY = dataY
    plt.scatter(rowY[:, 0], rowY[:, 1], color='blue')

plt.subplot(2, 3, 2)
plt.scatter(rowX[:, 0], rowX[:, 1], color='purple')
plt.subplot(2, 3, 3)
plt.scatter(rowY[:, 0], rowY[:, 1], color='blue')
